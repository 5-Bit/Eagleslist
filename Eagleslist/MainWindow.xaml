<Window x:Class="Eagleslist.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Eagleslist"
        mc:Ignorable="d"
        Loaded="WindowLoaded"
        Title="" MinWidth="800" MinHeight="480" SnapsToDevicePixels="True">

    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!--<local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Hidden"/>-->

        <SolidColorBrush x:Key="FGCUBlue" Color="#00287A"/>
        <SolidColorBrush x:Key="FGCUGreen" Color="#00885A"/>
        <SolidColorBrush x:Key="FGCUGreenDark" Color="#006F41"/>
        
        <SolidColorBrush x:Key="darkBackground" Color="#2F323A"/>
        <SolidColorBrush x:Key="darkerBackground" Color="#27292F"/>
        <SolidColorBrush x:Key="lightBackground" Color="#ECEEF3"/>
        <SolidColorBrush x:Key="lightBackground2" Color="#ECECEC"/>

        <SolidColorBrush x:Key="primaryColor" Color="#446CB3"/>
        <SolidColorBrush x:Key="sideBarHoverColor" Color="#DADADA"/>

        <Style TargetType="{x:Type Button}" x:Key="NavigationButtonStyle">
            <Setter Property="Background" Value="{StaticResource darkBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource lightBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="SidePanelButtonStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource lightBackground}"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="TopPanelButtonStyle">
            <Setter Property="Background" Value="{StaticResource FGCUGreen}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource FGCUGreenDark}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<Style TargetType="{x:Type Button}" BasedOn="{StaticResource TopPanelButtonStyle}" x:Key="TopPanelDropDownButton">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="{DynamicResource ResourceKey=accountOverlayButton}" Property="Background" Value="Blue"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
    </Window.Resources>
    
    <Grid Background="{StaticResource lightBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="topBar" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
              Panel.ZIndex="1000" Background="{StaticResource darkBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="60 0">
                <Button BorderThickness="0" Width="60" Height="60"
                        Click="NavigationBackButtonClicked"
                        Style="{StaticResource NavigationButtonStyle}">

                    <Image Source="images/navLeft.png" RenderOptions.BitmapScalingMode="HighQuality" 
                           Stretch="Fill" Margin="14"/>
                </Button>

                <Button BorderThickness="0" Width="60" Height="60" 
                        Click="NavigationForwardButtonClicked"
                        Style="{StaticResource NavigationButtonStyle}">

                    <Image Source="images/navRight.png" RenderOptions.BitmapScalingMode="HighQuality" 
                           Stretch="Fill" Margin="14"/>
                </Button>
            </StackPanel>

            <Label  Content="Eagleslist" VerticalAlignment="Center" HorizontalAlignment="Center"
                        FontSize="25" FontFamily="Segoe UI Semilight" Padding="0" 
                        Foreground="White" Grid.Column="1" Margin="0"/>

            <Canvas Grid.Column="2" HorizontalAlignment="Right">
                <Button Click="accountDropDownClicked" MinWidth="60" Padding="10 0"
                            HorizontalAlignment="Center" Canvas.ZIndex="2" Foreground="White"
                            Canvas.Right="0" 
                            x:Name="accountOverlayButton" VerticalAlignment="Center"
                            Style="{StaticResource TopPanelButtonStyle}"
                            Height="{Binding ElementName=topBar, Path=ActualHeight}">
                    Account
                </Button>

                <ComboBox x:Name="accountComboBox"
                              HorizontalAlignment="Right" Canvas.ZIndex="1" Canvas.Right="0"
                              Width="{Binding ElementName=accountOverlayButton, Path=ActualWidth}"
                              Canvas.Top="0" Canvas.Bottom="0" Height="{Binding ElementName=topBar, Path=ActualHeight}"
                              Background="{StaticResource FGCUGreen}" Foreground="{StaticResource FGCUGreen}" 
                              BorderThickness="0" Margin="0, 0, 0, 0" IsEnabled="False" 
                              ItemsSource="{Binding Path=accountComboBoxItems}"
                              SelectionChanged="accountComboBoxSelectionChanged">

                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="{StaticResource FGCUGreen}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="4">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource FGCUGreenDark}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.ItemContainerStyle>

                    <ComboBoxItem Content="Sign In" Visibility="Collapsed" Tag="LoggedOut"/>
                    <ComboBoxItem Content="Sign Up" Visibility="Collapsed" Tag="LoggedOut"/>
                    <ComboBoxItem Content="Profile" Visibility="Visible" Tag="LoggedIn"/>
                    <ComboBoxItem Content="Messages" Visibility="Visible" Tag="LoggedIn"/>
                    <ComboBoxItem Content="Sign Out" Visibility="Visible" Tag="LoggedIn"/>
                </ComboBox>
            </Canvas>

            <!--<Button x:Name="messagesButton" Click="MessagesButtonClicked" 
                    Height="40" Grid.Column="1" HorizontalAlignment="Right" 
                    Background="{StaticResource FGCUGreen}" BorderThickness="0" Margin="0, 0, 20, 0">


                -->
            <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label VerticalAlignment="Center" Foreground="White" Content="Messages"/>

                    <Image Source="images/messages.png" RenderOptions.BitmapScalingMode="HighQuality" 
                           Stretch="Fill" Height="20" VerticalAlignment="Center"
                           HorizontalAlignment="Center" />
                </StackPanel>-->
            <!--
            </Button>-->
        </Grid>
        
        <Grid Margin="0, 0, 0, 0" VerticalAlignment="Stretch" HorizontalAlignment="Left" 
              Grid.RowSpan="3" Grid.Column="0" Width="60" Panel.ZIndex="1500"
              Background="White" x:Name="sideBarButtonContainer">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>

            <Button x:Name="searchButton" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="SearchButtonClicked" Grid.Row="0"
                    Padding="0" Style="{StaticResource TopPanelButtonStyle}"
                    VerticalAlignment="Stretch">

                <DockPanel Margin="0">
                    <StackPanel VerticalAlignment="Center">
                        <Image Source="images/search.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0"
                               Content="Search" Foreground="White"/>
                    </StackPanel>
                </DockPanel>
            </Button>

            <Button x:Name="composeButton" HorizontalContentAlignment="Stretch" 
                    BorderThickness="0" Click="ComposeButtonClicked" Grid.Row="1"
                    Padding="0" Style="{StaticResource SidePanelButtonStyle}">

                <Grid VerticalAlignment="Stretch">
                    <Canvas VerticalAlignment="Stretch">
                        <Frame Background="{StaticResource FGCUGreen}" Padding="0" Margin="0" 
                           HorizontalAlignment="Left" Width="2" Height="41" Canvas.Left="0"
                           Visibility="{Binding ElementName=composeButton, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"/>
                    </Canvas>


                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Image Source="images/create.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0"
                               Content="Create" Foreground="Black"/>
                    </StackPanel>
                </Grid>
            </Button>

            <Button x:Name="listingsButton" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="ListingsButtonClicked"  Grid.Row="2"
                    Padding="0" Style="{StaticResource SidePanelButtonStyle}">
                <Grid VerticalAlignment="Stretch">
                    <Canvas VerticalAlignment="Stretch">
                        <Frame Background="{StaticResource FGCUGreen}" Padding="0" Margin="0" 
                           HorizontalAlignment="Left" Width="2" Height="41"
                           Visibility="{Binding ElementName=listingsButton, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"/>
                    </Canvas>

                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Image Source="images/listings.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0"
                               Content="Browse" Foreground="Black"/>
                    </StackPanel>
                </Grid>
            </Button>

            <Button x:Name="coursesButton" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="CoursesButtonClicked" Grid.Row="3"
                    Padding="0" Style="{StaticResource SidePanelButtonStyle}">

                <Grid VerticalAlignment="Stretch">
                    <Canvas VerticalAlignment="Stretch">
                        <Frame Background="{StaticResource FGCUGreen}" Padding="0" Margin="0" 
                           HorizontalAlignment="Left" Width="2" Height="41"
                           Visibility="{Binding ElementName=coursesButton, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"/>
                    </Canvas>

                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Image Source="images/courses.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0" 
                               Content="Courses" Foreground="Black"/>
                    </StackPanel>
                </Grid>
            </Button>
        </Grid>

        <Canvas x:Name="searchContainer" Margin="0, 0, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=searchContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=searchContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label HorizontalAlignment="Center" Margin="0, 0, 0, 10" FontSize="24">Search for:</Label>
                    <DockPanel HorizontalAlignment="Center">
                        <RadioButton Content="Books" IsChecked="True" Margin="5, 0, 5, 0"/>
                        <RadioButton Content="Courses" Margin="5, 0, 5, 0"/>
                        <RadioButton Content="Faculty" Margin="5, 0, 5, 0"/>
                    </DockPanel>

                    <DockPanel Width="200" Margin="0, 10, 0, 0">
                        <Border BorderThickness="2" CornerRadius="10">
                            <TextBox x:Name="searchTextBox" Width="150"
                                     Height="{Binding ElementName=searchSubmitButton, Path=ActualHeight}"/>
                        </Border>
                        <Button x:Name="searchSubmitButton" Content="Search" Height="22"
                                Click="SearchSubmitButtonClicked"/>
                    </DockPanel>
                </StackPanel>
                <!-- Column 1 here -->
                <!-- Column 2 here -->
            </Grid>
        </Canvas>

        <Canvas x:Name="composeContainer" Margin="0, 0, 0, 0" Visibility="Visible" Grid.Row="1" Grid.Column="1">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible"
                          Width="{Binding ElementName=composeContainer, Path=ActualWidth}"
                          Height="{Binding ElementName=composeContainer, Path=ActualHeight}">
                <Grid x:Name="composeGrid" HorizontalAlignment="Stretch" Width="Auto">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="62" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*" />
                        <ColumnDefinition Width="15*" />
                        <ColumnDefinition Width="15*" />
                        <ColumnDefinition Width="24*" />
                    </Grid.ColumnDefinitions>

                    <Label Margin="20, 10, 20, 10" Content="New Listing" FontSize="18"
                           Grid.ColumnSpan="4" Grid.Row="0" VerticalAlignment="Center"/>

                    <StackPanel Margin="20, 0, 10, 0" HorizontalAlignment="Stretch" 
                                Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="Post Title"/>
                        <TextBox Height="{Binding ElementName=conditionComboBox, Path=ActualHeight}" 
                                 FontSize="13.333" x:Name="NewListingTitleBox" TextChanged="NewListingTitleChanged"/>
                    </StackPanel>

                    <StackPanel Margin="10, 0, 10, 0" HorizontalAlignment="Stretch"
                                Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="Price ($)"/>
                        <TextBox Height="{Binding ElementName=conditionComboBox, Path=ActualHeight}"
                                 FontSize="13.333" x:Name="NewListingPriceBox" TextChanged="NewListingPriceChanged"/>
                    </StackPanel>

                    <StackPanel Margin="10, 0, 10, 0" HorizontalAlignment="Stretch"
                                Grid.Column="2" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="Condition"/>
                        <ComboBox x:Name="ConditionComboBox"/>

                    </StackPanel>

                    <StackPanel Margin="10, 0, 20, 0" HorizontalAlignment="Stretch" 
                                Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="ISBN (optional)"/>
                        <TextBox Height="{Binding ElementName=conditionComboBox, Path=ActualHeight}" FontSize="13.333"/>
                    </StackPanel>

                    <DockPanel Margin="20, 20, 20, 0" Grid.ColumnSpan="4" Grid.Row="2" VerticalAlignment="Stretch">
                        <Label Content="Body" HorizontalAlignment="Left"/>
                        <Label Content="Please do not post personal contact information" HorizontalAlignment="Right"/>
                    </DockPanel>

                    <TextBox Background="White" Grid.ColumnSpan="4" Grid.Row="3" 
                             VerticalAlignment="Stretch" Margin="20, 0, 20, 20"
                             MinHeight="150" TextWrapping="Wrap"/>
                    
                    <ListView x:Name="newPostImagesListView" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4"
                              Margin="20 0" Height="80"
                          SelectionChanged="ListingsViewSelectionChanged" 
                          SelectedIndex="{Binding Path=SelectedIndexValue}" 
                          ItemsSource="{Binding Path=Items}">

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <DockPanel Grid.ColumnSpan="4" Grid.Row="5" VerticalAlignment="Center" Margin="20, 20, 20, 20">
                        <Button Content="Post Listing" HorizontalAlignment="Right" Width="100"
                                x:Name="PostNewListingButton" IsEnabled="False">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <!--<Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="composeGrid"
                                                             Storyboard.TargetProperty="(Grid.Height)" 
                                                             From="{Binding ElementName=composeGrid, Path=ActualHeight}"
                                                             To="0" Duration="0:0:0.35" AutoReverse="False"/>
                                        </Storyboard>-->
                                        
                                        <Storyboard >
                                            <!-- <DoubleAnimation Storyboard.TargetName="composeGrid"
                                                             Storyboard.TargetProperty="(Grid.Height)"
                                                             From="{Binding ElementName=composeGrid, Path=ActualHeight}"
                                                             To="0" Duration="0:0:0.35"/>-->
                                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="composeGrid"
                                                                              Storyboard.TargetProperty="Margin"
                                                                              BeginTime="00:00:00">
                                                    
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 0, 0, 0" />
                                                <SplineThicknessKeyFrame KeyTime="00:00:0.25" Value="0, 0, 0, 0" />
                                                </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <!--<Button Content="Preview" HorizontalAlignment="Right" Width="100">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        --><!--<Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="composeGrid"
                                                             Storyboard.TargetProperty="(Grid.Height)" 
                                                             From="{Binding ElementName=composeGrid, Path=ActualHeight}"
                                                             To="0" Duration="0:0:0.35" AutoReverse="False"/>
                                        </Storyboard>--><!--
                                        <Storyboard >
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="composeGrid"
                                                                              Storyboard.TargetProperty="Margin"
                                                                              BeginTime="00:00:00">
                                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 0, 0, 0" />
                                                <SplineThicknessKeyFrame KeyTime="00:00:0.25" Value="0, -500, 0, 0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>-->
                    </DockPanel>
                </Grid>
            </ScrollViewer>
        </Canvas>

        <Canvas x:Name="listingsContainer" Margin="0, 0, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=listingsContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=listingsContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ListView x:Name="listingsView" BorderThickness="0" Background="{StaticResource darkerBackground}"
                          VerticalAlignment="Center" HorizontalAlignment="Stretch"
                          Height="{Binding ElementName=listingsContainer, Path=ActualHeight}" 
                          SelectionChanged="ListingsViewSelectionChanged" 
                          SelectedIndex="{Binding Path=SelectedIndexValue}" 
                          ItemsSource="{Binding Path=Items}" Grid.Column="0">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Title}" Margin="0, 5, 0, 0" HorizontalAlignment="Left" 
                                               Grid.Column="0" Grid.Row="0" Foreground="White"/>
                                    <TextBlock Text="{Binding Handle}" Margin="0, 5, 0, 0" HorizontalAlignment="Right"
                                               Grid.Column="1" Grid.Row="0" Foreground="{StaticResource lightBackground}"/>

                                    <TextBlock Text="{Binding Content}" FontWeight="Normal" HorizontalAlignment="Stretch"
                                               MaxWidth="285" TextWrapping="WrapWithOverflow" TextTrimming="WordEllipsis"
                                               FontSize="11" LineStackingStrategy="BlockLineHeight" LineHeight="13"
                                               Grid.ColumnSpan="2" Grid.Row="1" Margin="0, 0, 0, 5"/>
                                </Grid>
                            </WrapPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Grid Grid.Column="1" Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <Label x:Name="listingTitleLabel" FontSize="21.333" Content="Post Title"/>
                        <DockPanel>
                            <Label Content="Condition: "/>
                            <Label x:Name="listingConditionLabel" Content="condition text"/>
                        </DockPanel>

                        <DockPanel>
                            <Label Content="Price: "/>
                            <Label x:Name="listingAskingPrice" Content="some dollar amount"/>
                        </DockPanel>

                        <Label x:Name="listingTimePostedLabel" Content="undetermined"/>
                    </StackPanel>

                    <Border Height="150" Width="150" Background="Gray" 
                            HorizontalAlignment="Right" Grid.Column="1" Grid.Row="0">
                        <Image x:Name="listingImageView" Source="images/missing.png" 
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Stretch="UniformToFill" HorizontalAlignment="Center"/>
                    </Border>

                    <TextBlock x:Name="listingContentTextBlock" Text="Body text for post." Margin="10" 
                               IsEnabled="False" TextWrapping="WrapWithOverflow"
                               TextTrimming="WordEllipsis" LineStackingStrategy="BlockLineHeight"
                               Grid.Row="1" Grid.ColumnSpan="2"/>
                </Grid>
                <!--<StackPanel x:Name="contentStack" Margin="20, 20, 20, 20" Grid.Column="1"
                            MaxHeight="{Binding ElementName=listingsView, Path=ActualHeight}">
                    <TextBlock x:Name="listingContentTextBlock" Text="hello, world" Margin="10" 
                               IsEnabled="False" TextWrapping="WrapWithOverflow"
                               TextTrimming="WordEllipsis" LineStackingStrategy="BlockLineHeight"
                               MaxWidth="{Binding ElementName=contentStack, Path=ActualWidth}"/>
                </StackPanel>-->
            </Grid>
        </Canvas>

        <Canvas x:Name="coursesContainer" Margin="0, 0, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=coursesContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=coursesContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Column 1 here -->
                <!-- Column 2 here -->

            </Grid>
        </Canvas>

        <Canvas x:Name="messagesContainer" Margin="0, 0, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=messagesContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=messagesContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                
                <Label Content="Hello?"/>
            </Grid>
        </Canvas>

        <Canvas x:Name="profileContainer" Margin="20" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=profileContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=profileContainer, Path=ActualHeight}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Width="100" Height="100" Background="Red" ClipToBounds="True"
                        Grid.Row="0" Grid.Column="0">
                    <Image x:Name="ProfileImage"/>
                </Border>

                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                        <TextBlock Text="Username" VerticalAlignment="Center" x:Name="ProfileUsername"/>
                        <TextBlock Text="Email" VerticalAlignment="Center" x:Name="ProfileEmail"/>

                   </StackPanel>
                    <TextBlock Text="Bio" VerticalAlignment="Top" Grid.Row="1" Grid.Column="0"
                               TextWrapping="Wrap" x:Name="ProfileBio"/>
                </Grid>
            </Grid>
        </Canvas>

        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
              VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
            </Grid.RowDefinitions>

            <Label Content="&lt; /&gt; with &#10084; by 5Bit Studios" HorizontalAlignment="Center"
                   VerticalAlignment="Center" Margin="0" Padding="0"
                   Foreground="DarkGray" FontSize="9.333" Grid.Row="0" Grid.Column="0"/>

        </Grid>
    </Grid>
</Window>

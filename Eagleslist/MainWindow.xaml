<Window x:Class="Eagleslist.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Eagleslist"
        mc:Ignorable="d"
        Title="" MinWidth="800" MinHeight="480" SnapsToDevicePixels="True">

    <Window.Resources>
        <SolidColorBrush x:Key="FGCUBlue" Color="#00287A"/>
        <SolidColorBrush x:Key="FGCUGreen" Color="#00885A"/>
        
        <SolidColorBrush x:Key="darkBackground" Color="#2F323A"/>
        <SolidColorBrush x:Key="darkerBackground" Color="#27292F"/>
        <SolidColorBrush x:Key="lightBackground" Color="#ECEEF3"/>

        <SolidColorBrush x:Key="primaryColor" Color="#446CB3"/>
        <SolidColorBrush x:Key="secondaryColor" Color="#ECECEC"/>
        <SolidColorBrush x:Key="sideBarHoverColor" Color="#DADADA"/>

    </Window.Resources>
    
    <Grid Background="{StaticResource lightBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <Border BorderBrush="{StaticResource FGCUGreen}" BorderThickness="0 1 0 0"
                 Grid.Row="0" Grid.Column="1" Height="60" VerticalAlignment="Top">

            <Grid x:Name="topBar"  
              Panel.ZIndex="1000" Background="{StaticResource darkBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="Eagleslist" VerticalAlignment="Center" HorizontalAlignment="Left"
                   FontSize="25" FontFamily="Segoe UI Semilight" Padding="0" Margin="20 0" Foreground="White"/>

                <!--<Button x:Name="profileButton" Click="ProfileButtonClicked" Height="40"
                    Grid.Column="0" HorizontalAlignment="Left" Margin="20, 0, 0, 0"
                    Background="{StaticResource FGCUGreen}" BorderThickness="0">

                <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                    <Image Source="images/profile_white.png" RenderOptions.BitmapScalingMode="HighQuality"
                           Stretch="UniformToFill" Height="25" VerticalAlignment="Top"
                           HorizontalAlignment="Left" x:Name="profileImage" />

                    <Label x:Name="profileLabel" VerticalAlignment="Center"
                           Foreground="White" Content="Log In"/>
                </StackPanel>
            </Button>-->
                <Canvas Grid.Column="1" HorizontalAlignment="Right">
                    <Button Background="{StaticResource FGCUGreen}" Click="accountDropDownClicked" MinWidth="60" Padding="20 0" 
                            HorizontalAlignment="Center" Canvas.ZIndex="2" Foreground="White" Canvas.Right="0" 
                            Canvas.Top="0" Canvas.Bottom="0" x:Name="accountOverlayButton" VerticalAlignment="Center"
                            Height="{Binding ElementName=topBar, Path=ActualHeight}">

                        Account
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" >
                                <Setter Property="Background" Value="#373737" />
                                <Setter Property="Foreground" Value="White" />
                                <!--<Setter Property="FontSize" Value="15" />-->
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <!--<Setter Property="Padding" Value="20 0"/>-->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Name="border" BorderThickness="0" Padding="10 0" Margin="0"
                                                    Background="{TemplateBinding Background}">
                                                
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" Width="{TemplateBinding Width}"/>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#E59400" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </Trigger>

                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="OrangeRed" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ComboBox x:Name="accountComboBox"
                              HorizontalAlignment="Right" Canvas.ZIndex="1" Canvas.Right="0"
                              Width="{Binding ElementName=accountOverlayButton, Path=ActualWidth}"
                              Canvas.Top="0" Canvas.Bottom="0" Height="{Binding ElementName=topBar, Path=ActualHeight}"
                              Background="{StaticResource FGCUGreen}" Foreground="{StaticResource FGCUGreen}" 
                              BorderThickness="0" Margin="0, 0, 0, 0" IsEnabled="False" 
                              ItemsSource="{Binding Path=accountComboBoxItems}"
                              SelectionChanged="accountComboBoxSelectionChanged">

                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="Background" Value="{StaticResource FGCUGreen}"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderBrush" Value="{StaticResource FGCUGreen}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>

                        <ComboBoxItem Content="Sign In" Visibility="Visible"/>
                        <ComboBoxItem Content="Sign Up" Visibility="Visible"/>
                        <ComboBoxItem Content="Profile" Visibility="Collapsed"/>
                        <ComboBoxItem Content="Messages" Visibility="Collapsed"/>
                        <ComboBoxItem Content="Sign Out" Visibility="Collapsed"/>
                    </ComboBox>
                </Canvas>

                <!--<Button x:Name="messagesButton" Click="MessagesButtonClicked" 
                    Height="40" Grid.Column="1" HorizontalAlignment="Right" 
                    Background="{StaticResource FGCUGreen}" BorderThickness="0" Margin="0, 0, 20, 0">


                -->
                <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label VerticalAlignment="Center" Foreground="White" Content="Messages"/>

                    <Image Source="images/messages.png" RenderOptions.BitmapScalingMode="HighQuality" 
                           Stretch="Fill" Height="20" VerticalAlignment="Center"
                           HorizontalAlignment="Center" />
                </StackPanel>-->
                <!--
            </Button>-->
            </Grid>
        </Border>

        <Grid Margin="0, 0, 0, 0" VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.RowSpan="2" Grid.Column="0"
                    Width="60" Background="{StaticResource darkBackground}" x:Name="sideBarButtonContainer">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>

            <Button x:Name="searchButton" Background="{StaticResource FGCUGreen}" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="SearchButtonClicked" Grid.Row="0" Padding="0">

                <DockPanel Margin="0">
                    <StackPanel>
                        <Image Source="images/search.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0" Content="Search" Foreground="White"/>
                    </StackPanel>
                </DockPanel>
            </Button>

            <Button x:Name="composeButton" Background="{StaticResource darkBackground}" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="ComposeButtonClicked" Grid.Row="1" Padding="0">

                <DockPanel Margin="0">
                    <Frame Background="{StaticResource FGCUGreen}" Padding="0" Margin="0" 
                           HorizontalAlignment="Left" Width="2"/>

                    <StackPanel>
                        <Image Source="images/create.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0" Content="Create" Foreground="White"/>
                    </StackPanel>
                </DockPanel>
            </Button>

            <Button x:Name="listingsButton" Background="{StaticResource darkBackground}" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="ListingsButtonClicked"  Grid.Row="2" Padding="0">

                <DockPanel Margin="0">
                    <Frame Background="{StaticResource FGCUGreen}" Padding="0" Margin="0" 
                           HorizontalAlignment="Left" Width="2"/>

                    <StackPanel>
                        <Image Source="images/listings.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0" Content="Browse" Foreground="White"/>
                    </StackPanel>
                </DockPanel>
            </Button>

            <Button x:Name="coursesButton" Background="{StaticResource darkBackground}" HorizontalContentAlignment="Stretch"
                    BorderThickness="0" Click="CoursesButtonClicked" Grid.Row="3" Padding="0">

                <DockPanel Margin="0">
                    <Frame Background="{StaticResource FGCUGreen}" Padding="0" Margin="0" 
                           HorizontalAlignment="Left" Width="2"/>

                    <StackPanel>
                        <Image Source="images/courses.png" Height="25" Width="25"/>
                        <Label HorizontalAlignment="Center" Padding="0" Content="Courses" Foreground="White"/>
                    </StackPanel>
                </DockPanel>
            </Button>
        </Grid>

        <Canvas x:Name="searchContainer" Margin="0, 0, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=searchContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=searchContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label HorizontalAlignment="Center" Margin="0, 0, 0, 10" FontSize="24">Search for:</Label>
                    <DockPanel HorizontalAlignment="Center">
                        <RadioButton Content="Books" IsChecked="True" Margin="5, 0, 5, 0"/>
                        <RadioButton Content="Courses" Margin="5, 0, 5, 0"/>
                        <RadioButton Content="Faculty" Margin="5, 0, 5, 0"/>
                    </DockPanel>

                    <DockPanel Width="200" Margin="0, 10, 0, 0">
                        <Border BorderThickness="2" CornerRadius="10">
                            <TextBox x:Name="searchTextBox" Width="150"
                                     Height="{Binding ElementName=searchSubmitButton, Path=ActualHeight}"/>
                        </Border>
                        <Button x:Name="searchSubmitButton" Content="Search" Height="22"
                                Click="SearchSubmitButtonClicked"/>
                    </DockPanel>
                </StackPanel>
                <!-- Column 1 here -->
                <!-- Column 2 here -->
            </Grid>
        </Canvas>

        <Canvas x:Name="composeContainer" Margin="0, 0, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <StackPanel>
                <Grid x:Name="composeGrid" Width="{Binding ElementName=composeContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=composeContainer, Path=ActualHeight}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="62" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="170" />
                    </Grid.ColumnDefinitions>

                    <Label Margin="20, 10, 20, 10" Content="New Listing" FontSize="18"
                           Grid.ColumnSpan="4" Grid.Row="0" VerticalAlignment="Center"/>

                    <StackPanel Margin="20, 0, 10, 0" HorizontalAlignment="Stretch" 
                                Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="Post Title"/>
                        <TextBox Height="{Binding ElementName=conditionComboBox, Path=ActualHeight}" FontSize="13.333"/>
                    </StackPanel>

                    <StackPanel Margin="10, 0, 10, 0" HorizontalAlignment="Stretch"
                                Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="Price ($)"/>
                        <TextBox Height="{Binding ElementName=conditionComboBox, Path=ActualHeight}" FontSize="13.333"/>
                    </StackPanel>

                    <StackPanel Margin="10, 0, 10, 0" HorizontalAlignment="Stretch"
                                Grid.Column="2" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="Condition"/>
                        <ComboBox x:Name="conditionComboBox">
                            <ComboBoxItem IsSelected="True">(select)</ComboBoxItem>
                            <ComboBoxItem>New</ComboBoxItem>
                            <ComboBoxItem>Great</ComboBoxItem>
                            <ComboBoxItem>Good</ComboBoxItem>
                            <ComboBoxItem>Okay</ComboBoxItem>
                            <ComboBoxItem>Poor</ComboBoxItem>
                            <ComboBoxItem>Mixed</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <StackPanel Margin="10, 0, 20, 0" HorizontalAlignment="Stretch" 
                                Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                        <Label Content="ISBN (optional)"/>
                        <TextBox Height="{Binding ElementName=conditionComboBox, Path=ActualHeight}" FontSize="13.333"/>
                    </StackPanel>

                    <DockPanel Margin="20, 20, 20, 0" Grid.ColumnSpan="4" Grid.Row="2" VerticalAlignment="Stretch">
                        <Label Content="Body" HorizontalAlignment="Left"/>
                        <Label Content="Please do not post personal contact information" HorizontalAlignment="Right"/>
                    </DockPanel>

                    <TextBox Background="White" Grid.ColumnSpan="4" Grid.Row="3" 
                                 VerticalAlignment="Stretch" Margin="20, 0, 20, 20"/>

                    <DockPanel Grid.ColumnSpan="4" Grid.Row="4" VerticalAlignment="Center" Margin="20, 0, 20, 20">
                        <Button Content="Preview" HorizontalAlignment="Right" Width="100">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <!--<Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="composeGrid"
                                                             Storyboard.TargetProperty="(Grid.Height)" 
                                                             From="{Binding ElementName=composeGrid, Path=ActualHeight}"
                                                             To="0" Duration="0:0:0.35" AutoReverse="False"/>
                                        </Storyboard>-->
                                        <Storyboard >
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="composeGrid"
                                                                              Storyboard.TargetProperty="Margin"
                                                                              BeginTime="00:00:00">
                                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 0, 0, 0" />
                                                <SplineThicknessKeyFrame KeyTime="00:00:0.25" Value="0, -500, 0, 0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                    </DockPanel>
                </Grid>
            </StackPanel>
        </Canvas>

        <Canvas x:Name="listingsContainer" Margin="0, 0, 0, 0" Visibility="Visible" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=listingsContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=listingsContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ListView x:Name="listingsView" BorderThickness="0" Background="{StaticResource darkerBackground}"
                          VerticalAlignment="Center" HorizontalAlignment="Stretch"
                          Height="{Binding ElementName=listingsContainer, Path=ActualHeight}" 
                          SelectionChanged="ListingsViewSelectionChanged" 
                          SelectedIndex="{Binding Path=SelectedIndexValue}" 
                          ItemsSource="{Binding Path=Items}" Grid.Column="0">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Title}" Margin="0, 5, 0, 0" HorizontalAlignment="Left" 
                                               Grid.Column="0" Grid.Row="0" Foreground="White"/>
                                    <TextBlock Text="{Binding Handle}" Margin="0, 5, 0, 0" HorizontalAlignment="Right"
                                               Grid.Column="1" Grid.Row="0" Foreground="{StaticResource lightBackground}"/>

                                    <TextBlock Text="{Binding Content}" FontWeight="Normal" HorizontalAlignment="Stretch"
                                               MaxWidth="285" TextWrapping="WrapWithOverflow" TextTrimming="WordEllipsis"
                                               FontSize="11" LineStackingStrategy="BlockLineHeight" LineHeight="13"
                                               Grid.ColumnSpan="2" Grid.Row="1" Margin="0, 0, 0, 5"/>
                                </Grid>
                            </WrapPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Grid Grid.Column="1" Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <Label x:Name="listingTitleLabel" FontSize="21.333" Content="Post Title"/>
                        <DockPanel>
                            <Label Content="Condition: "/>
                            <Label x:Name="listingConditionLabel" Content="condition text"/>
                        </DockPanel>

                        <DockPanel>
                            <Label Content="Price: "/>
                            <Label x:Name="listingAskingPrice" Content="some dollar amount"/>
                        </DockPanel>

                        <Label x:Name="listingTimePostedLabel" Content="undetermined"/>
                    </StackPanel>

                    <Border Height="150" Width="150" Background="Gray" 
                            HorizontalAlignment="Right" Grid.Column="1" Grid.Row="0">
                        <Image x:Name="listingImageView" Source="images/missing.png" 
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Stretch="UniformToFill" HorizontalAlignment="Center"/>
                    </Border>

                    <TextBlock x:Name="listingContentTextBlock" Text="Body text for post." Margin="10" 
                               IsEnabled="False" TextWrapping="WrapWithOverflow"
                               TextTrimming="WordEllipsis" LineStackingStrategy="BlockLineHeight"
                               Grid.Row="1" Grid.ColumnSpan="2"/>
                </Grid>
                <!--<StackPanel x:Name="contentStack" Margin="20, 20, 20, 20" Grid.Column="1"
                            MaxHeight="{Binding ElementName=listingsView, Path=ActualHeight}">
                    <TextBlock x:Name="listingContentTextBlock" Text="hello, world" Margin="10" 
                               IsEnabled="False" TextWrapping="WrapWithOverflow"
                               TextTrimming="WordEllipsis" LineStackingStrategy="BlockLineHeight"
                               MaxWidth="{Binding ElementName=contentStack, Path=ActualWidth}"/>
                </StackPanel>-->
            </Grid>
        </Canvas>

        <Canvas x:Name="coursesContainer" Margin="54, 60, 0, 0" Visibility="Collapsed" Grid.Row="1" Grid.Column="1">
            <Grid Width="{Binding ElementName=coursesContainer, Path=ActualWidth}"
                  Height="{Binding ElementName=coursesContainer, Path=ActualHeight}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Column 1 here -->
                <!-- Column 2 here -->

            </Grid>
        </Canvas>
    </Grid>
</Window>
